{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/layout/layout.module.css","components/UI/BackDrop/BackDrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","containers/QuizList/QuizList.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/BackDrop/BackDrop.js","components/Navigation/Drawer/Drawer.js","hoc/layout/layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","Axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","form/FormFramework.js","hoc/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","containers/QuizList/QuizList.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","BackDrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","console","log","isAuthenticated","Fragment","renderLinks","React","Component","Layout","state","menu","ToggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizesSuccess","quizes","fetchQuizesError","error","fetchQuizSuccess","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","authLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","isValid","trim","is","controlName","control","target","validateControl","forEach","name","onChangeHandler","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","Select","options","option","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","axiosQuiz","QuizList","fetchQuizes","renderQuizes","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"gJACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,yB,mBCAzFD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,mBCArED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,mBCAzED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,MAAQ,4B,mBCA5GD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,MAAQ,8B,mBCApHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,wBAAwB,QAAU,0B,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAa,2BAA2B,OAAS,yB,mBCAnGD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,mBCAvDD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,kNCyBdC,EAvBI,SAAAC,GAEf,IAAMC,EAAM,CACRC,IAAQH,WACR,MAWJ,OAPIC,EAAMG,QACNF,EAAIG,KAAK,YACTH,EAAIG,KAAKF,IAAQG,OAEjBJ,EAAIG,KAAK,WAIT,uBACCE,UAAWL,EAAIM,KAAK,KACpBC,QAASR,EAAMS,Y,kCChBTC,EAFE,SAAAV,GAAK,OAAI,yBAAKM,UAAWJ,IAAQQ,SAAUF,QAASR,EAAMQ,W,QC6D5DG,E,2MAzDXC,aAAe,WACX,EAAKZ,MAAMa,W,2EAGHC,GAAQ,IAAD,OACf,OACIA,EAAMC,KAAI,SAACC,EAAMC,GACb,OACI,wBAAIC,IAAKD,GACL,kBAAC,IAAD,CACIE,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZC,gBAAiBnB,IAAQoB,OACzBd,QAAS,EAAKI,cAEbI,EAAKO,a,+BAS1B,IAAMtB,EAAM,CAACC,IAAQS,QAEjBa,KAAKxB,MAAMG,QACXF,EAAIG,KAAKF,IAAQuB,OAGrB,IAAMX,EAAQ,CACV,CAACK,GAAI,IAAKI,MAAO,uCAAUH,OAAO,IAatC,OAVAM,QAAQC,IAAI,OAAQH,KAAKxB,MAAM4B,iBAE5BJ,KAAKxB,MAAM4B,iBACVd,EAAMV,KAAK,CAACe,GAAI,gBAAiBI,MAAO,sEAAgBH,OAAO,IAC/DN,EAAMV,KAAK,CAACe,GAAI,UAAWI,MAAO,iCAASH,OAAO,KAGlDN,EAAMV,KAAK,CAACe,GAAI,QAASI,MAAO,qEAAeH,OAAO,IAItD,kBAAC,IAAMS,SAAP,KACI,yBAAKvB,UAAWL,EAAIM,KAAK,MACrB,4BACKiB,KAAKM,YAAYhB,KAGzBU,KAAKxB,MAAMG,OAAS,kBAAC,EAAD,CAAUK,QAASgB,KAAKxB,MAAMa,UAAa,U,GArD3DkB,IAAMC,W,OCCrBC,E,2MAEFC,MAAQ,CACJC,MAAM,G,EAGVC,kBAAoB,WAChB,EAAKC,SAAS,CACVF,MAAO,EAAKD,MAAMC,Q,EAI1BG,iBAAmB,WACf,EAAKD,SAAS,CACVF,MAAM,K,wEAKV,OACI,yBAAK7B,UAAWJ,IAAQ+B,QACpB,kBAAC,EAAD,CACI9B,OAAQqB,KAAKU,MAAMC,KACnBtB,QAASW,KAAKc,iBACdV,gBAAiBJ,KAAKxB,MAAM4B,kBAEhC,kBAAC,EAAD,CACInB,SAAUe,KAAKY,kBACfjC,OAAQqB,KAAKU,MAAMC,OAGvB,8BACKX,KAAKxB,MAAMuC,e,GAhCXP,aA6CNQ,mBANf,SAAyBN,GACrB,MAAO,CACHN,kBAAmBM,EAAMO,KAAKC,SAIvBF,CAAyBP,G,oEC9BzBU,EAlBI,SAAA3C,GAEf,IAAMC,EAAM,CAACC,IAAQyC,YAMrB,OAJI3C,EAAMkC,OACNjC,EAAIG,KAAKF,IAAQF,EAAMkC,QAIvB,wBACI5B,UAAWL,EAAIM,KAAK,KACpBC,QAAS,kBAAMR,EAAM4C,cAAc5C,EAAM6C,OAAOC,MAE/C9C,EAAM6C,OAAOE,OCKXC,EAjBK,SAAAhD,GACZ,OACA,wBAAIM,UAAWJ,IAAQ8C,aACjBhD,EAAMiD,QAAQlC,KAAI,SAAC8B,EAAQ5B,GACzB,OACI,kBAAC,EAAD,CACIC,IAAKD,EACL4B,OAAQA,EACRD,cAAe5C,EAAM4C,cACrBV,MAAOlC,EAAMkC,MAAQlC,EAAMkC,MAAMW,EAAOC,IAAM,YCWvDI,EApBI,SAAAlD,GACX,OACA,yBAAKM,UAAWJ,IAAQgD,YACpB,uBAAG5C,UAAWJ,IAAQiD,UAClB,8BACI,gCAASnD,EAAMoD,aAAf,KADJ,OAEKpD,EAAMqD,UAGf,+BAAQrD,EAAMoD,aAAd,iBAAkCpD,EAAMsD,aAGxC,kBAAC,EAAD,CACIpB,MAAOlC,EAAMkC,MACbe,QAASjD,EAAMiD,QACfL,cAAe5C,EAAM4C,kB,kCCEtBW,EAlBA,SAAAvD,GAEX,IAAMC,EAAM,CACRC,IAAQqD,OACRrD,IAAQF,EAAMwD,OAGlB,OACI,4BACIhD,QAASR,EAAMQ,QACfF,UAAWL,EAAIM,KAAK,KACpBkD,SAAUzD,EAAMyD,UAEfzD,EAAMuC,WCmCJmB,EA9CM,SAAA1D,GAEjB,IAAM2D,EAAeC,OAAOC,KAAK7D,EAAM8D,SAASC,QAAO,SAACC,EAAO9C,GAK3D,MAJ2B,YAAvBlB,EAAM8D,QAAQ5C,IACd8C,IAGGA,IACR,GAEH,OACI,yBAAK1D,UAAWJ,IAAQwD,cACpB,4BACM1D,EAAMiE,KAAKlD,KAAI,SAACmD,EAAUjD,GAExB,IAAMhB,EAAM,CACR,KAC+B,UAA/BD,EAAM8D,QAAQI,EAASpB,IAAkB,WAAa,WACtD5C,IAAQF,EAAM8D,QAAQI,EAASpB,MAGnC,OACI,wBAAI5B,IAAKD,GACL,gCAASA,EAAQ,GADrB,QAEKiD,EAASb,SACV,uBAAG/C,UAAWL,EAAIM,KAAK,YAQvC,qFAAcoD,EAAd,iBAAgC3D,EAAMiE,KAAKE,QAE3C,6BACI,kBAAC,EAAD,CAAQ3D,QAASR,EAAMoE,QAASZ,KAAK,WAArC,0DACA,kBAAC,IAAD,CAAMrC,GAAG,KACT,kBAAC,EAAD,CAAQX,QAASR,EAAMoE,QAASZ,KAAK,WAArC,mI,iBC9BDa,EAVA,SAAArE,GACX,OACI,yBAAKM,UAAWJ,IAAQoE,QACpB,yBAAKhE,UAAWJ,IAAQmE,QACvB,8BAAO,iC,yCCLLE,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,+CCmCN,SAASC,EAAmBC,GAC/B,MAAO,CACHnB,KCvC4B,uBDwC5BmB,UAKD,SAASC,GAAiBC,GAC7B,MAAO,CACHrB,KC9C0B,qBD+C1BqB,MAAOA,GAsBR,SAASC,GAAiBb,GAC7B,MAAO,CACHT,KCtE0B,qBDuE1BS,QAID,SAASc,GAAaC,EAAalB,GACtC,MAAO,CACHN,KC3EsB,iBD4EtBwB,cAAalB,W,IExEfmB,G,4LAGEzD,KAAKxB,MAAMkF,cAAc1D,KAAKxB,MAAMmF,MAAMC,OAAOtC,M,6CAIjDtB,KAAKxB,MAAMqF,c,+BAIX,OACI,yBAAK/E,UAAWJ,IAAQ+E,MACpB,yBAAK3E,UAAWJ,IAAQoF,aACpB,2JAEI9D,KAAKxB,MAAMuF,UAAY/D,KAAKxB,MAAMiE,KAChC,kBAAC,EAAD,MACAzC,KAAKxB,MAAMwF,WACZ,kBAAC,EAAD,CACA1B,QAAStC,KAAKxB,MAAM8D,QACpBG,KAAMzC,KAAKxB,MAAMiE,KACjBG,QAAS5C,KAAKxB,MAAMqF,YAEpB,kBAAC,EAAD,CACApC,QAASzB,KAAKxB,MAAMiE,KAAKzC,KAAKxB,MAAMyF,gBAAgBxC,QACpDI,SAAU7B,KAAKxB,MAAMiE,KAAKzC,KAAKxB,MAAMyF,gBAAgBpC,SACrDT,cAAepB,KAAKxB,MAAM0F,gBAC1BpC,WAAY9B,KAAKxB,MAAMiE,KAAKE,OAC5Bf,aAAc5B,KAAKxB,MAAMyF,eAAiB,EAC1CvD,MAAOV,KAAKxB,MAAMgF,oB,GA9BxBjD,IAAMC,WAgEVQ,oBArBf,SAAyBN,GACrB,MAAO,CACH4B,QAAS5B,EAAM+B,KAAKH,QACpB0B,WAAYtD,EAAM+B,KAAKuB,WACvBC,eAAgBvD,EAAM+B,KAAKwB,eAC3BT,YAAa9C,EAAM+B,KAAKe,YACxBf,KAAM/B,EAAM+B,KAAKA,KACjBsB,QAASrD,EAAM+B,KAAKsB,YAK5B,SAA4BI,GACxB,MAAO,CACHT,cAAe,SAAApC,GAAE,OAAI6C,GFZCC,EEYsB9C,EFXhD,uCAAO,WAAM6C,GAAN,iBAAAE,EAAA,6DACHF,EAvBG,CACHnC,KClC0B,uBDuDvB,kBAIwBe,EAAMuB,IAAN,kBAAqBF,EAArB,UAJxB,OAIOG,EAJP,OAKO9B,EAAO8B,EAASC,KAGtBL,EAASb,GAAiBb,IAR3B,gDAUG0B,EAASf,GAAiB,EAAD,KAV5B,yDAAP,mDAAM,KADH,IAAuBgB,GEatBF,gBAAiB,SAAAO,GAAQ,OAAIN,EF+B9B,SAAyBM,GAC5B,OAAO,SAACN,EAAUO,GAEd,IAAMhE,EAAQgE,IAAWjC,KAEzB,GAAI/B,EAAM8C,YAAa,CACnB,IAAM9D,EAAM0C,OAAOC,KAAK3B,EAAM8C,aAAa,GAC3C,GAA+B,YAA3B9C,EAAM8C,YAAY9D,GAClB,OAIR,IAAMmC,EAAWnB,EAAM+B,KAAK/B,EAAMuD,gBAC5B3B,EAAU5B,EAAM4B,QAEtB,GAAIT,EAAS8C,gBAAkBF,EAAU,CAEjCnC,EAAQT,EAASP,MACjBgB,EAAQT,EAASP,IAAM,WAG3B6C,EAASZ,GAAa,eAAEkB,EAAW,WAAYnC,IAE/C,IAAMsC,EAAUC,OAAOC,YAAW,YAiBvC,SAAwBpE,GAC3B,OAAOA,EAAMuD,eAAiB,IAAMvD,EAAM+B,KAAKE,OAjB/BoC,CAAerE,GAGfyD,EAjCT,CACHnC,KCtFyB,oBDuFzBgD,OA+BsCtE,EAAMuD,eAAiB,IAFjDE,EArCT,CACHnC,KCjFmB,gBDyHX6C,OAAOI,aAAaL,KACrB,UAGHtC,EAAQT,EAASP,IAAM,QACvB6C,EAASZ,GAAa,eAAEkB,EAAW,SAAUnC,KEjEX4B,CAAgBO,KACtDZ,UAAW,kBAAMM,EF2Ed,CACHnC,KCxIkB,mBCiEXhB,CAA6CyC,I,yDCtE5D,SAASyB,GAAT,GAAuD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eACjC,OAAQF,GAASE,EAAiBD,EAGtC,IA6BeE,GA7BD,SAAA9G,GAEV,IAAM+G,EAAY/G,EAAMwD,MAAQ,OAC1BvD,EAAM,CAACC,KAAQ4G,OACfE,EAAO,UAAMD,EAAN,YAAmBE,KAAKC,UAMrC,OAJIR,GAAU1G,IACVC,EAAIG,KAAKF,KAAQiH,SAIjB,yBAAK7G,UAAWL,EAAIM,KAAK,MACrB,2BAAOyG,QAASA,GAAUhH,EAAMuB,OAChC,2BACIiC,KAAMuD,EACNjE,GAAIkE,EACJI,MAAOpH,EAAMoH,MACbC,SAAUrH,EAAMqH,WAIhBX,GAAU1G,GACR,8BAAOA,EAAMsH,cAAgB,oIAC7B,O,oBCCX,SAASC,GAAWC,GACvB,OAAO,SAAA7B,GACHW,YAAW,WACPX,EAAS8B,QACH,IAAPD,IAIJ,SAASC,KAIZ,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBACjB,CACHnE,KH/BmB,eGqDpB,SAASoE,GAAYlF,GACxB,MAAO,CACHc,KHxDoB,eGyDpBd,S,IC5DFmF,G,2MAEF3F,MAAQ,CACJ4F,aAAa,EACbC,aAAc,CACVC,MAAO,CACHZ,MAAO,GACP5D,KAAM,QACNjC,MAAO,QACP+F,aAAc,gHACdX,OAAO,EACPC,SAAS,EACTqB,WAAY,CACRC,UAAU,EACVF,OAAO,IAGfG,SAAU,CACNf,MAAO,GACP5D,KAAM,WACNjC,MAAO,uCACP+F,aAAc,+IACdV,SAAS,EACTqB,WAAY,CACRC,UAAU,EACVE,UAAW,M,EAM3BC,aAAe,WACX,EAAKrI,MAAMyC,KACP,EAAKP,MAAM6F,aAAaC,MAAMZ,MAC9B,EAAKlF,MAAM6F,aAAaI,SAASf,OACjC,I,EAKRkB,gBAAkB,WACd,EAAKtI,MAAMyC,KACP,EAAKP,MAAM6F,aAAaC,MAAMZ,MAC9B,EAAKlF,MAAM6F,aAAaI,SAASf,OACjC,I,EAIRmB,cAAgB,SAAAC,GACZA,EAAMC,kB,+EAGMrB,EAAOa,GACnB,IAAKA,EACD,OAAO,EAGX,IAAIS,GAAU,EAed,OAZIT,EAAWC,WACXQ,EAA2B,KAAjBtB,EAAMuB,QAAiBD,GAGjCT,EAAWD,QACXU,EAAUE,KAAGZ,MAAMZ,IAAUsB,GAG7BT,EAAWG,YACXM,EAAUtB,EAAMjD,QAAU8D,EAAWG,WAAaM,GAG/CA,I,sCAGKF,EAAOK,GACnB,IAAMd,EAAY,gBAAQvG,KAAKU,MAAM6F,cAC/Be,EAAO,gBAAQf,EAAac,IAElCC,EAAQ1B,MAAQoB,EAAMO,OAAO3B,MAC7B0B,EAAQlC,SAAU,EAClBkC,EAAQnC,MAAQnF,KAAKwH,gBAAgBF,EAAQ1B,MAAO0B,EAAQb,YAE5DF,EAAac,GAAeC,EAE5B,IAAIhB,GAAc,EAElBlE,OAAOC,KAAKkE,GAAckB,SAAQ,SAAAC,GAC9BpB,EAAcC,EAAamB,GAAMvC,OAASmB,KAG9CtG,KAAKa,SAAS,CACV0F,eAAcD,kB,qCAKN,IAAD,OACX,OAAOlE,OAAOC,KAAKrC,KAAKU,MAAM6F,cAAchH,KAAI,SAAC8H,EAAa5H,GAE1D,IAAM6H,EAAU,EAAK5G,MAAM6F,aAAac,GAExC,OACI,kBAAC,GAAD,CACI3H,IAAK2H,EAAc5H,EACnBuC,KAAMsF,EAAQtF,KACd4D,MAAO0B,EAAQ1B,MACfT,MAAOmC,EAAQnC,MACfC,QAASkC,EAAQlC,QACjBrF,MAAOuH,EAAQvH,MACf+F,aAAcwB,EAAQxB,aACtBT,iBAAkBiC,EAAQb,WAC1BZ,SAAU,SAAAmB,GAAK,OAAI,EAAKW,gBAAgBX,EAAOK,W,+BAQ3D,OACI,yBAAKvI,UAAWJ,KAAQ2H,MACpB,6BACI,kGAEA,0BAAMuB,SAAU5H,KAAK+G,cAAejI,UAAWJ,KAAQmJ,UAEjD7H,KAAK8H,eAEP,kBAAC,EAAD,CACI9F,KAAK,UACLC,UAAWjC,KAAKU,MAAM4F,YACtBtH,QAASgB,KAAK6G,cAHlB,kCAOA,kBAAC,EAAD,CACI7E,KAAK,UACLC,UAAWjC,KAAKU,MAAM4F,YACtBtH,QAASgB,KAAK8G,iBAHlB,uH,GAxILvG,IAAMC,WA4JVQ,mBAAQ,MANvB,SAA4BmD,GACxB,MAAO,CACHlD,KAAM,SAACuF,EAAOG,EAAUoB,GAAlB,OAA8B5D,ED9JrC,SAAcqC,EAAOG,EAAUoB,GAClC,8CAAO,WAAM5D,GAAN,uBAAAE,EAAA,6DACG2D,EAAW,CACbxB,QAAOG,WACPsB,mBAAmB,GAGnBC,EAAM,wGAEPH,IACCG,EAAM,qHATP,SAYoBnF,EAAMoF,KAAKD,EAAKF,GAZpC,OAYGzD,EAZH,OAaGC,EAAOD,EAASC,KAChB4D,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAA6B,IAAjB9D,EAAK+D,WAE5DrC,aAAasC,QAAQ,QAAShE,EAAKiE,SACnCvC,aAAasC,QAAQ,SAAUhE,EAAKkE,SACpCxC,aAAasC,QAAQ,iBAAkBJ,GAEvCjE,EAASiC,GAAY5B,EAAKiE,UAC1BtE,EAAS4B,GAAWvB,EAAK+D,YArBtB,4CAAP,mDAAM,GC6J2CtH,CAAKuF,EAAOG,EAAUoB,QAI5D/G,CAAkCqF,I,oBCrK1C,SAASsC,GAAcC,EAAQnC,GAClC,OAAO,gBACAmC,EADP,CAEInC,aACAtB,OAAQsB,EACRrB,SAAS,EACTQ,MAAO,KAIR,SAASiD,GAASjD,GAA2B,IAApBa,EAAmB,uDAAN,KACzC,IAAKA,EACD,OAAO,EAGX,IAAIS,GAAU,EAMd,OAJIT,EAAWC,WACXQ,EAA2B,KAAjBtB,EAAMuB,QAAiBD,GAG9BA,EAIJ,SAAS4B,GAAavC,GACzB,IAAID,GAAc,EAElB,IAAK,IAAIgB,KAAWf,EACZA,EAAawC,eAAezB,KAC5BhB,EAAcC,EAAae,GAASnC,OAASmB,GAKrD,OAAOA,ECnCX,IAEe0C,GAFG,SAAAxK,GAAK,OAAIA,EAAMuC,U,oBC+BlBkI,GA5BA,SAAAzK,GAEX,IAAMgH,EAAO,UAAMhH,EAAMuB,MAAZ,YAAqB0F,KAAKC,UAEvC,OACI,yBAAK5G,UAAWJ,KAAQuK,QACpB,2BAAOzD,QAASA,GAAUhH,EAAMuB,OAChC,4BACIuB,GAAIkE,EACJI,MAAOpH,EAAMoH,MACbC,SAAUrH,EAAMqH,UAGhBrH,EAAM0K,QAAQ3J,KAAI,SAAC4J,EAAQ1J,GACzB,OACI,4BACEmG,MAAOuD,EAAOvD,MACdlG,IAAKyJ,EAAOvD,MAAQnG,GAEjB0J,EAAO5H,YCXlC,SAAS6H,GAAoBpE,GACzB,OAAO2D,GAAc,CACnB5I,MAAM,8CAAD,OAAaiF,GAClBc,aAAc,6JACdxE,GAAI0D,GACH,CAAC0B,UAAU,IAGlB,SAAS2C,KACL,MAAO,CACLxH,SAAU8G,GAAc,CACtB5I,MAAO,kFACP+F,aAAc,kJACb,CAACY,UAAU,IACd4C,QAASF,GAAoB,GAC7BG,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,I,IAI7BM,G,2MAEHhJ,MAAQ,CACJ4F,aAAa,EACb3B,cAAe,EACf4B,aAAc8C,M,EAGlBtC,cAAgB,SAAAC,GACZA,EAAMC,kB,EAGV0C,mBAAqB,SAAA3C,GAChBA,EAAMC,iBADmB,MAGoB,EAAKvG,MAAM6F,aAAjD+C,EAHkB,EAGlBA,QAASC,EAHS,EAGTA,QAASC,EAHA,EAGAA,QAASC,EAHT,EAGSA,QAG5BG,EAAe,CACjB/H,SAAU,EAAKnB,MAAM6F,aAAa1E,SAAS+D,MAC3CtE,GAAI,EAAK9C,MAAMiE,KAAKE,OAAS,EAC7BgC,cAAe,EAAKjE,MAAMiE,cAC1BlD,QAAS,CACL,CAACF,KAAM+H,EAAQ1D,MAAOtE,GAAIgI,EAAQhI,IAClC,CAACC,KAAMgI,EAAQ3D,MAAOtE,GAAIiI,EAAQjI,IAClC,CAACC,KAAMiI,EAAQ5D,MAAOtE,GAAIkI,EAAQlI,IAClC,CAACC,KAAMkI,EAAQ7D,MAAOtE,GAAImI,EAAQnI,MAI1C,EAAK9C,MAAMqL,mBAAmBD,GAE9B,EAAK/I,SAAS,CACVyF,aAAa,EACb3B,cAAe,EACf4B,aAAc8C,Q,EAItBS,kBAAoB,SAAA9C,GACjBA,EAAMC,iBAEJ,EAAKpG,SAAS,CACb4B,KAAM,GACN6D,aAAa,EACb3B,cAAe,EACf4B,aAAc8C,OAEhB,EAAK7K,MAAMuL,oB,EAGfC,cAAgB,SAACpE,EAAOyB,GACxB,IAAMd,EAAY,gBAAQ,EAAK7F,MAAM6F,cAC/Be,EAAO,gBAAQf,EAAac,IAElCC,EAAQlC,SAAU,EAClBkC,EAAQ1B,MAAQA,EAChB0B,EAAQnC,MAAQ0D,GAASvB,EAAQ1B,MAAO0B,EAAQb,YAEhDF,EAAac,GAAeC,EAE5B,EAAKzG,SAAS,CACZ0F,eACAD,YAAawC,GAAavC,M,EA0B5B0D,oBAAsB,SAAAjD,GAClB9G,QAAQC,IAAI6G,EAAMO,OAAO3B,OACzB,EAAK/E,SAAS,CACV8D,eAAgBqC,EAAMO,OAAO3B,S,gFAxBpB,IAAD,OAChB,OAAOxD,OAAOC,KAAKrC,KAAKU,MAAM6F,cAAchH,KAAI,SAAC8H,EAAa5H,GAC5D,IAAM6H,EAAU,EAAK5G,MAAM6F,aAAac,GAExC,OACE,kBAAC,GAAD,CAAW3H,IAAK2H,EAAc5H,GAC5B,kBAAC,GAAD,CACEM,MAAOuH,EAAQvH,MACf6F,MAAO0B,EAAQ1B,MACfT,MAAOmC,EAAQnC,MACfE,iBAAkBiC,EAAQb,WAC1BrB,QAASkC,EAAQlC,QACjBU,aAAcwB,EAAQxB,aACtBD,SAAU,SAAAmB,GAAK,OAAI,EAAKgD,cAAchD,EAAMO,OAAO3B,MAAOyB,MAEjD,IAAV5H,EAAc,6BAAS,W,+BAgB1B,IAAMyK,EAAS,kBAAC,GAAD,CACXnK,MAAM,+IACN6F,MAAO5F,KAAKU,MAAMiE,cAClBkB,SAAU7F,KAAKiK,oBACff,QAAS,CACL,CAAC3H,KAAM,EAAGqE,MAAO,GACjB,CAACrE,KAAM,EAAGqE,MAAO,GACjB,CAACrE,KAAM,EAAGqE,MAAO,GACjB,CAACrE,KAAM,EAAGqE,MAAO,MAIzB,OACI,yBAAK9G,UAAWJ,KAAQgL,aACpB,6BACI,+GAEA,0BAAM9B,SAAU5H,KAAK+G,eAEf/G,KAAKmK,iBAELD,EAEF,kBAAC,EAAD,CACIlI,KAAK,UACLhD,QAASgB,KAAK2J,mBACd1H,UAAWjC,KAAKU,MAAM4F,aAH1B,yFAOA,kBAAC,EAAD,CACItE,KAAK,UACLhD,QAASgB,KAAK8J,kBACd7H,SAAqC,IAA3BjC,KAAKxB,MAAMiE,KAAKE,QAH9B,8E,GAjIEpC,IAAMC,WA6JjBQ,oBAdf,SAAyBN,GACvB,MAAO,CACL+B,KAAM/B,EAAMsC,OAAOP,SAIvB,SAA4B0B,GAC1B,MAAO,CACL0F,mBAAoB,SAAAO,GAAI,OAAIjG,ECpLzB,SAA4BiG,GAC/B,MAAO,CACHpI,KTK4B,uBSJ5BoI,QDiLiCP,CAAmBO,KACxDL,iBAAkB,kBAAM5F,ECtKxB,uCAAO,WAAOA,EAAUO,GAAjB,SAAAL,EAAA,sEACGgG,EAAUlC,KAAK,eAAiBzD,IAAW1B,OAAOP,MADrD,OAEH0B,EARG,CACHnC,KTF2B,wBSOxB,2CAAP,qDAAM,QD2KKhB,CAA6C0I,I,oBErLtDY,G,uLAGE,OAAOtK,KAAKxB,MAAM2E,OAAO5D,KAAI,SAAAkD,GACzB,OACI,wBACI/C,IAAK+C,EAAKnB,IAEV,kBAAC,IAAD,CAAS3B,GAAI,SAAW8C,EAAKnB,IACxBmB,EAAKiF,Y,0CAStB1H,KAAKxB,MAAM+L,gB,+BAIX,OACI,yBAAKzL,UAAWJ,KAAQ4L,UACpB,6BACI,yGAEItK,KAAKxB,MAAMuF,SAAwC,IAA7B/D,KAAKxB,MAAM2E,OAAOR,OACtC,kBAAC,EAAD,MACA,4BACG3C,KAAKwK,sB,GA9BXjK,IAAMC,WAqDdQ,oBAdf,SAAyBN,GACrB,MAAO,CACHyC,OAAQzC,EAAM+B,KAAKU,OACnBY,QAASrD,EAAM+B,KAAKsB,YAK5B,SAA4BI,GACxB,MAAO,CACHoG,YAAa,kBAAMpG,EX9CvB,uCAAO,WAAMA,GAAN,iBAAAE,EAAA,6DACHF,EAqBG,CACHnC,KClC0B,uBDWvB,kBAGwBe,EAAMuB,IAAI,gBAHlC,OAGOC,EAHP,OAKOpB,EAAS,GAEff,OAAOC,KAAKkC,EAASC,MAAMiD,SAAQ,SAAC/H,EAAKD,GACrC0D,EAAOvE,KAAK,CACR0C,GAAI5B,EACJgI,KAAK,kCAAD,OAAWjI,EAAQ,QAI/B0E,EAASjB,EAAmBC,IAd7B,kDAgBCgB,EAASf,GAAiB,EAAD,KAhB1B,0DAAP,mDAAM,QWkDKpC,CAA6CsJ,ICxDtDG,G,4LAEEzK,KAAKxB,MAAMyH,W,+BAIX,OAAO,kBAAC,KAAD,CAAUtG,GAAI,U,GANRY,IAAMC,WAiBZQ,mBAAQ,MANvB,SAA4BmD,GACxB,MAAO,CACH8B,OAAQ,kBAAM9B,EAAS8B,UAIhBjF,CAAkCyJ,ICV3CC,G,4LAGF1K,KAAKxB,MAAMmM,c,+BAKX,IAAIC,EACF,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,QAAQC,UAAWzE,KAC/B,kBAAC,KAAD,CAAOwE,KAAK,YAAYC,UAAWrH,KACnC,kBAAC,KAAD,CAAOoH,KAAK,IAAIjL,OAAK,EAACkL,UAAWR,KACjC,kBAAC,KAAD,CAAU3K,GAAG,OAgBjB,OAZIK,KAAKxB,MAAM4B,kBACbwK,EACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,gBAAgBC,UAAWpB,KACvC,kBAAC,KAAD,CAAOmB,KAAK,YAAYC,UAAWrH,KACnC,kBAAC,KAAD,CAAOoH,KAAK,UAAUC,UAAWL,KACjC,kBAAC,KAAD,CAAOI,KAAK,IAAIjL,OAAK,EAACkL,UAAWR,KACjC,kBAAC,KAAD,CAAU3K,GAAG,QAMjB,kBAAC,EAAD,KACGiL,O,GA/BSrK,IAAMC,WAiDTuK,oBAAW/J,aAZ1B,SAAyBN,GACvB,MAAO,CACLN,kBAAmBM,EAAMO,KAAKC,UAIlC,SAA4BiD,GAC1B,MAAO,CACLwG,UAAW,kBAAMxG,GTRV,SAAAA,GACH,IAAMjD,EAAQgF,aAAa8E,QAAQ,SACnC,GAAI9J,EAEG,CACH,IAAMkH,EAAiB,IAAIC,KAAKnC,aAAa8E,QAAQ,mBAClD5C,GAAkB,IAAIC,KACrBlE,EAAS8B,OAET9B,EAASiC,GAAYlF,IACrBiD,EAAS4B,IAAYqC,EAAeE,WAAY,IAAID,MAAOC,WAAa,YAP5EnE,EAAS8B,aSSKjF,CAA6C0J,KCjDnDO,QACW,cAA7BpG,OAAOqG,SAASC,UAEe,UAA7BtG,OAAOqG,SAASC,UAEhBtG,OAAOqG,SAASC,SAASxH,MACvB,2D,aCRAyH,GAAe,CACjBjI,OAAQ,GACRY,SAAS,EACTV,MAAO,KACPf,QAAS,GACT0B,YAAY,EACZC,eAAgB,EAChBT,YAAa,KACbf,KAAM,M,aChBJ2I,GAAe,CACjB3I,KAAM,ICAV,IAAM2I,GAAe,CACjBlK,MAAO,MCCImK,oBAAgB,CAC3B5I,KHgBW,WAAoD,IAA/B/B,EAA8B,uDAAtB0K,GAAcE,EAAQ,uCAC9D,OAAOA,EAAOtJ,MACV,IdxB0B,qBcyBtB,OAAO,gBACAtB,EADP,CACcqD,SAAS,IAE3B,Id3B4B,uBc4BxB,OAAO,gBACArD,EADP,CACcqD,SAAS,EAAOZ,OAAQmI,EAAOnI,SAEjD,Id9B0B,qBc+BtB,OAAO,gBACAzC,EADP,CACcqD,SAAQ,EAAOV,MAAOiI,EAAOjI,QAE/C,IdjC0B,qBckCtB,OAAO,gBACA3C,EADP,CACcqD,SAAS,EAAOtB,KAAM6I,EAAO7I,OAE/C,IdnCsB,iBcoClB,OAAO,gBACA/B,EADP,CACc8C,YAAa8H,EAAO9H,YAAalB,QAASgJ,EAAOhJ,UAEnE,IdtCmB,ccuCf,OAAO,gBACA5B,EADP,CACcsD,YAAY,IAE9B,IdzCyB,oBc0CrB,OAAO,gBACAtD,EADP,CACc8C,YAAa,KAAMS,eAAgBqH,EAAOtG,SAE5D,Id5CkB,ac6Cd,OAAO,gBACAtE,EADP,CAEIuD,eAAgB,EAChBT,YAAa,KACbQ,YAAY,EACZ1B,QAAS,KAEjB,QACI,OAAO5B,IGtDfsC,OFCW,WAAsD,IAA/BtC,EAA8B,uDAAtB0K,GAAcE,EAAQ,uCAChE,OAAOA,EAAOtJ,MACV,IfA4B,uBeCxB,OAAO,gBACAtB,EADP,CAEI+B,KAAK,GAAD,oBAAM/B,EAAM+B,MAAZ,CAAkB6I,EAAOlB,SAErC,IfJ2B,sBeKvB,OAAO,gBACA1J,EADP,CACc+B,KAAM,KAExB,QACI,OAAO/B,IEZfO,KDDW,WAAoD,IAA/BP,EAA8B,uDAAtB0K,GAAcE,EAAQ,uCAC9D,OAAQA,EAAOtJ,MACX,IhBGoB,egBFhB,OAAO,gBACAtB,EADP,CACcQ,MAAOoK,EAAOpK,QAEhC,IhBAmB,cgBCf,OAAO,gBACAR,EADP,CACcQ,MAAO,OAEzB,QACI,OAAOR,M,SEPb6K,GACc,kBAAX1G,QACPA,OAAO2G,qCACL3G,OAAO2G,qCAAqC,IAEvCC,KAEHC,GAAQC,aAAYC,GAAaL,GAAiBM,aAAgBC,QAGlEC,GACF,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAKZM,IAASC,OAAOF,GAAKG,SAASC,eAAe,SLsGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArJ,GACLnD,QAAQmD,MAAMA,EAAMsJ,c","file":"static/js/main.51670f9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3J72a\",\"close\":\"Drawer_close__3teT5\",\"active\":\"Drawer_active__3cF4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle___XaN8\",\"open\":\"MenuToggle_open__ywoSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__34aHE\",\"QuizWrapper\":\"Quiz_QuizWrapper__2IS1g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__KuIuf\",\"Question\":\"ActiveQuiz_Question__1wDFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__1PKF4\",\"success\":\"AnswerItem_success__3RAG7\",\"error\":\"AnswerItem_error__XGRm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__1lQDR\",\"success\":\"FinishedQuiz_success__3DtQG\",\"error\":\"FinishedQuiz_error__SueTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1MOfM\",\"error\":\"Button_error__6Nwab\",\"success\":\"Button_success__rWRMR\",\"primary\":\"Button_primary__1805r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2wmJy\",\"lds-ripple\":\"Loader_lds-ripple__1Qehu\",\"center\":\"Loader_center__3qlk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3xgqp\",\"AuthForm\":\"Auth_AuthForm__2x_XA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3zq14\",\"invalid\":\"Input_invalid__RrGOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__3W1jf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__1KQAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__3tPtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__1m7fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2IslV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3GkdJ\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa',\r\n        \r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n         className={cls.join(' ')}\r\n         onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes  from './BackDrop.module.css'\r\n\r\nconst BackDrop = props => <div className={classes.BackDrop} onClick={props.onClick}></div>\r\n\r\nexport default BackDrop","import React from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport BackDrop from '../../UI/BackDrop/BackDrop'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Drawer extends React.Component {\r\n\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    }    \r\n\r\n    renderLinks(links) {\r\n        return(\r\n            links.map((link, index) => {\r\n                return(\r\n                    <li key={index}>\r\n                        <NavLink\r\n                            to={link.to}\r\n                            exact={link.exact}\r\n                            activeClassName={classes.active}\r\n                            onClick={this.clickHandler}\r\n                        >\r\n                            {link.label}\r\n                        </NavLink>\r\n                    </li>\r\n                )\r\n            } )\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if(!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        const links = [\r\n            {to: '/', label: 'Список', exact: true}\r\n        ]\r\n\r\n        console.log('AUth', this.props.isAuthenticated)\r\n\r\n        if(this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n            links.push({to: '/logout', label: 'Выйти', exact: false})\r\n\r\n        } else {\r\n            links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <BackDrop onClick={this.props.onClose}/> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react'\r\nimport classes from './layout.module.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    ToggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <MenuToggle\r\n                    onToggle={this.ToggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n            \r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return (\r\n        <li \r\n            className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}\r\n            >\r\n            {props.answer.text}\r\n            </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => {\r\n        return (\r\n        <ul className={classes.AnswersList}>\r\n            { props.answers.map((answer, index) => {\r\n                return (\r\n                    <AnswerItem \r\n                        key={index}\r\n                        answer={answer}\r\n                        onAnswerClick={props.onAnswerClick}\r\n                        state={props.state ? props.state[answer.id] : null}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuiz = props => {\r\n        return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n\r\n            <small>{props.answerNumber } из { props.quizLength }</small>\r\n            </p>\r\n\r\n            <AnswersList\r\n                state={props.state}\r\n                answers={props.answers}\r\n                onAnswerClick={props.onAnswerClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button \r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FinishedQuiz = props => {\r\n\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n\r\n        return total\r\n    }, 0)\r\n\r\n    return(\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                { props.quiz.map((quizItem, index) => {\r\n\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n\r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n\r\n                }) }\r\n                \r\n            </ul>\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n                <Link to=\"/\">\r\n                <Button onClick={props.onRetry} type=\"success\">Перейти в список тестов</Button>\r\n                </Link>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => {\r\n    return (\r\n        <div className={classes.center}>\r\n            <div className={classes.Loader}>\r\n             <div /><div />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-legabog.firebaseio.com/'\r\n})","import axios from '../../Axios/axios-quiz'\r\nimport { FETCH_QUIZES_START,\r\n         FETCH_QUIZES_SUCCESS,\r\n         FETCH_QUIZES_ERROR,\r\n         FETCH_QUIZ_SUCCESS,\r\n         QUIZ_SET_STATE,\r\n         FINISH_QUIZ,\r\n         QUIZ_NEXTQUESTION,\r\n         QUIZ_RETRY } from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get('/quizes.json')\r\n            \r\n            const quizes = []\r\n                        \r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Тест №${index + 1}`\r\n                })\r\n            })\r\n            \r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        } catch(error) {\r\n            dispatch(fetchQuizesError(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n\r\n}\r\n\r\nexport function fetchQuizesError(error) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: error\r\n    }\r\n\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n\r\n        try {\r\n            const response = await axios.get(`/quizes/${quizId}.json`)  \r\n            const quiz = response.data\r\n            \r\n            \r\n            dispatch(fetchQuizSuccess(quiz))\r\n          } catch(e) {\r\n              dispatch(fetchQuizesError(e))\r\n          }\r\n    }\r\n\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState, results\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n    return {\r\n        type: QUIZ_NEXTQUESTION,\r\n        number\r\n    }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n\r\n        const state = getState().quiz\r\n\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if (state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n        \r\n        const question = state.quiz[state.activeQuestion]\r\n        const results = state.results\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n\r\n            if(!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n\r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (isQuizFinished(state)) {\r\n                    dispatch(finishQuiz())\r\n                } else {\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n\r\n        } else {\r\n            results[question.id] = 'error'\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport function isQuizFinished(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: QUIZ_RETRY\r\n    }\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXTQUESTION = 'QUIZ_NEXTQUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz  from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\r\n\r\n\r\nclass Quiz extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)   \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.props.isFinished\r\n                        ?<FinishedQuiz\r\n                         results={this.props.results}\r\n                         quiz={this.props.quiz}\r\n                         onRetry={this.props.retryQuiz}\r\n                        />\r\n                        :<ActiveQuiz \r\n                         answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                         question={this.props.quiz[this.props.activeQuestion].question}\r\n                         onAnswerClick={this.props.quizAnswerClick}\r\n                         quizLength={this.props.quiz.length}\r\n                         answerNumber={this.props.activeQuestion + 1}\r\n                         state={this.props.answerState}\r\n                        />\r\n                    }\r\n                \r\n\r\n                    \r\n                </div>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,   \r\n        loading: state.quiz.loading  \r\n    }\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid ({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate & touched\r\n}\r\n\r\nconst Input = props => {\r\n\r\n    const inputType = props.type || 'text'\r\n    const cls = [classes.Input]\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input \r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            {\r\n                isInvalid(props)\r\n                ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import axios from '../../Axios/axios-quiz'\r\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from './actionTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email, password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXQFyxdaJvvhbo4kMmbS0iblZVs_ye1Bk'\r\n\r\n        if(isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCXQFyxdaJvvhbo4kMmbS0iblZVs_ye1Bk'\r\n        }\r\n        \r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userid', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(authLogout(data.expiresIn))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function authLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userid')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(authLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n\r\n            }\r\n        }\r\n    }    \r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport is from 'is_js'\r\nimport { auth } from '../../store/actions/auth'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Auth extends React.Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        )\r\n        \r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        )  \r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        } \r\n\r\n        let isValid = true\r\n\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n\r\n        if (validation.email) {\r\n            isValid = is.email(value) && isValid           \r\n        }\r\n\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler(event, controlName) {\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n    \r\n        formControls[controlName] = control\r\n        \r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            \r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n                <Input\r\n                    key={controlName + index} \r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    errorMessage={control.errorMessage}\r\n                    shouldValidate={!!control.validation}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                /> \r\n            )\r\n        })\r\n\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                        \r\n                        { this.renderInputs()}\r\n\r\n                        <Button \r\n                            type=\"success\" \r\n                            disabled={!this.state.isFormValid}                           \r\n                            onClick={this.loginHandler}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button \r\n                            type=\"primary\" \r\n                            disabled={!this.state.isFormValid}\r\n                            onClick={this.registerHandler}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    return isValid\r\n\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n\r\n\r\n    return isFormValid\r\n\r\n}","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","import React from 'react'\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n            >\r\n              { props.options.map((option, index) => {\r\n                  return (\r\n                      <option\r\n                        value={option.value}\r\n                        key={option.value + index}\r\n                      >\r\n                          {option.text}\r\n                      </option>\r\n                  )\r\n              })}  \r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","import React from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport {createControl, validate, validateForm} from '../../form/FormFramework'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport {connect} from 'react-redux'\r\nimport {finishCreateQuiz, createQuizQuestion} from '../../store/actions/create'\r\n\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n      label: `Вариант ${number}`,\r\n      errorMessage: 'Значение не может быть пустым',\r\n      id: number\r\n    }, {required: true})\r\n  }\r\n\r\nfunction createFormControls() {\r\n    return {\r\n      question: createControl({\r\n        label: 'Введите вопрос',\r\n        errorMessage: 'Вопрос не может быть пустым'\r\n      }, {required: true}),\r\n      option1: createOptionControl(1),\r\n      option2: createOptionControl(2),\r\n      option3: createOptionControl(3),\r\n      option4: createOptionControl(4)\r\n    }\r\n  }\r\n\r\nclass QuizCreator extends React.Component {\r\n\r\n   state = {\r\n       isFormValid: false,\r\n       rightAnswerId: 1,\r\n       formControls: createFormControls()\r\n   } \r\n\r\n   submitHandler = event => {\r\n       event.preventDefault()\r\n   }\r\n\r\n   addQuestionHandler = event => {\r\n        event.preventDefault()\r\n\r\n        const {option1, option2, option3, option4} = this.state.formControls\r\n\r\n\r\n        const questionItem = {\r\n            question: this.state.formControls.question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}   \r\n            ]\r\n        }\r\n\r\n        this.props.createQuizQuestion(questionItem)\r\n\r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        })\r\n   }\r\n\r\n    createQuizHandler = event => {\r\n       event.preventDefault()\r\n         \r\n         this.setState({\r\n          quiz: [],\r\n          isFormValid: false,\r\n          rightAnswerId: 1,\r\n          formControls: createFormControls()\r\n         })\r\n        this.props.finishCreateQuiz() \r\n   }\r\n\r\n    changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.touched = true\r\n    control.value = value\r\n    control.valid = validate(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n\r\n\r\n   renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n         { index === 0 ? <hr /> : null }\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n    selectChangeHandler = event => {\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n\r\n    }\r\n \r\n    render() {\r\n\r\n        const select = <Select\r\n            label=\"Выбирите правильный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n            ]}\r\n        />\r\n        \r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n                        \r\n                        { this.renderControls() }\r\n                        \r\n                        { select }\r\n                    \r\n                        <Button \r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n                        <Button \r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),  \r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"./actionTypes\";\r\nimport axiosQuiz from \"../../Axios/axios-quiz\";\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axiosQuiz.post('/quizes.json' , getState().create.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n}","import React from 'react'\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\n\r\nclass QuizList extends React.Component {\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map(quiz => {\r\n            return (\r\n                <li \r\n                    key={quiz.id}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n                    { \r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                        ? <Loader />\r\n                        : <ul>\r\n                            {this.renderQuizes()}\r\n                          </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { logout } from '../../store/actions/auth'\r\n\r\nclass Logout extends React.Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React from 'react';\nimport Layout from './hoc/layout/layout'\nimport Quiz from './containers/Quiz/Quiz'\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport Auth from './containers/Auth/Auth'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport QuizList from './containers/QuizList/QuizList'\nimport { connect } from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport { autoLogin } from './store/actions/auth'\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth}/>\n        <Route path=\"/quiz/:id\" component={Quiz}/>\n        <Route path=\"/\" exact component={QuizList}/>\n        <Redirect to=\"/\" />\n      </Switch>        \n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator}/>\n          <Route path=\"/quiz/:id\" component={Quiz}/>\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={QuizList}/>\n          <Redirect to=\"/\" />\n        </Switch>  \n      )\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { FETCH_QUIZES_START,\r\n         FETCH_QUIZES_ERROR,\r\n         FETCH_QUIZES_SUCCESS,\r\n         FETCH_QUIZ_SUCCESS,\r\n         QUIZ_SET_STATE,\r\n         FINISH_QUIZ,\r\n         QUIZ_NEXTQUESTION,\r\n         QUIZ_RETRY,\r\n         } from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null,\r\n    \r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }    \r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading:false, error: action.error\r\n            } \r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, answerState: action.answerState, results: action.results\r\n            }  \r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state, isFinished: true\r\n            } \r\n        case QUIZ_NEXTQUESTION:\r\n            return {\r\n                ...state, answerState: null, activeQuestion: action.number\r\n            } \r\n        case QUIZ_RETRY:\r\n            return {\r\n                ...state, \r\n                activeQuestion: 0,\r\n                answerState: null,\r\n                isFinished: false,\r\n                results: {}\r\n            }  \r\n        default:\r\n            return state\r\n    }\r\n}","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\n\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]                \r\n            }  \r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state, quiz: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { AUTH_SUCCESS, AUTH_LOGOUT } from '../actions/actionTypes'\r\n\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from '../reducers/create'\r\nimport authReducer from './auth'\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}